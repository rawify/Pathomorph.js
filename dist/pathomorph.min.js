/*
Pathomorph v0.0.2 7/11/2025
https://github.com/rawify/Pathomorph.js

Copyright (c) 2025, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(t){const l=2*Math.PI,h={Line:({x:a,y:b},{x:c,y:e})=>`M${a} ${b}L${c} ${e}`,Rectangle:({x:a,y:b},{x:c,y:e})=>`M${a} ${b}L${a} ${e}L${c} ${e}L${c} ${b}z`,Circle:(a,b)=>h.Ellipse(a,b,b),Ellipse:({x:a,y:b},c,e,d=0)=>{const f=a-c;return`M ${f} ${b}`+`A ${c} ${e} ${d} 0 1 ${a+c} ${b}`+`A ${c} ${e} ${d} 0 1 ${f} ${b}`},Arc:({x:a,y:b},c,e=0,d=l)=>{const f={x:a+c*Math.cos(e),y:b+c*Math.sin(e)},g={x:a+c*Math.cos(d),y:b+c*Math.sin(d)};e=(d-e)%l;0>e&&(e+=l);return 1E-6>Math.abs(e)||1E-6>
Math.abs(e-l)?`M ${f.x} ${f.y} A ${c} ${c} 0 1 1 ${a-c} ${b} A ${c} ${c} 0 1 1 ${f.x} ${f.y}z`:`M ${f.x} ${f.y} A ${c} ${c} 0 ${e>Math.PI?1:0} 1 ${g.x} ${g.y}`},Polyline:a=>{if(2>a.length)return"";let b="M";for(let c=0;c<a.length;c++)0<c&&(b+="L"),b+=a[c].x,b+=" ",b+=a[c].y;return b},Polygon:a=>h.Polyline(a)+"z",RoundedRect:({x:a,y:b},{x:c,y:e},d=0,f=0)=>`M${a} ${e-f}`+`A ${d} ${f} 0 0 0 ${a+d} ${e}`+`L${c-d} ${e}`+`A ${d} ${f} 0 0 0 ${c} ${e-f}`+`L${c} ${b+f}`+`A ${d} ${f} 0 0 0 ${c-d} ${b}`+`L${a+
d} ${b}`+`A ${d} ${f} 0 0 0 ${a} ${b+f}z`,LineOffset:(a,b,c=0,e=0)=>{var d=Vector2.fromPoints(a,b);const f=d.norm();if(c+e>=f||0===f)return"";d=d.scale(1/f);return h.Line({x:a.x+d.x*c,y:a.y+d.y*c},{x:b.x-d.x*e,y:b.y-d.y*e})},CurvedHorizontalLine:({x:a,y:b},{x:c,y:e})=>{const d=a+(c-a)/2;return`M${a} ${b} C${d} ${b} ${d} ${e} ${c} ${e}`},CurvedVerticalLine:({x:a,y:b},{x:c,y:e})=>{const d=b+(e-b)/2;return`M${a} ${b} C${a} ${d} ${c} ${d} ${c} ${e}`},CurvedLine:(a,b,c=.5)=>{let e=Vector2.fromPoints(a,
b);const d=e.norm();if(!d)return"";e=e.scale(1/d);const f=e.perp();c*=d;return`M${a.x} ${a.y}`+`C${a.x+(f.x+e.x)*c} ${a.y+(f.y+e.y)*c}`+` ${b.x+(f.x-e.x)*c} ${b.y+(f.y-e.y)*c}`+` ${b.x} ${b.y}`},ArrowTip:(a,b)=>{a=Vector2.fromPoints(a,b).normalize().scale(-6);return`M${b.x} ${b.y}L${b.x+.951057*a.x-.309017*a.y} ${b.y+.309017*a.x+.951057*a.y}L${b.x+.75*a.x} ${b.y+.75*a.y}L${b.x+.951057*a.x+.309017*a.y} ${b.y-.309017*a.x+.951057*a.y}Z`},FilletCorner:(a,b,c,e)=>{var d=Vector2.fromPoints(b,a).normalize();
const f=Vector2.fromPoints(b,c).normalize(),g=e*Math.sqrt(2/(1-d.dot(f))-1),k=d.scale(g).add(b);b=f.scale(g).add(b);d=0>d.cross(f)?1:0;return`M${a.x} ${a.y}`+`L${k.x} ${k.y}`+`A${e} ${e} 0 0 ${d} ${b.x} ${b.y}`+`L${c.x} ${c.y}`},PartialPolyline:(a,b)=>{if(2>a.length)return"";const c=[];var e=0;for(var d=1;d<a.length;d++){var f=Math.hypot(a[d].x-a[d-1].x,a[d].y-a[d-1].y);e+=f;c.push(f)}f=b*e;b=`M${a[0].x} ${a[0].y}`;for(let g=1;g<a.length;g++){const k=c[g-1];e=a[g-1];d=a[g];if(k<=f)b+=`L${d.x} ${d.y}`,
f-=k;else{a=f/k;b+=`L${e.x+a*(d.x-e.x)} ${e.y+a*(d.y-e.y)}`;break}}return b},RingSegment:({x:a,y:b},c,e,d=0,f=l)=>{e/=2;const g=c-e;c+=e;const k=Math.sin(d),m=Math.cos(d),n=Math.sin(f),p=Math.cos(f);var q=a+g*m,r=b+g*k;d=(f-d)%l;0>d&&(d+=l);d=d>Math.PI?1:0;return`M${q} ${r}`+`A${g} ${g} 0 ${d} 1 ${a+g*p} ${b+g*n}`+`A${e} ${e} 0 0 0 ${a+c*p} ${b+c*n}`+`A${c} ${c} 0 ${d} 0 ${a+c*m} ${b+c*k}`+`A${e} ${e} 0 0 0 ${q} ${r}`+"Z"}};"function"===typeof define&&define.amd?define([],function(){return h}):"object"===
typeof exports?(Object.defineProperty(h,"__esModule",{value:!0}),h["default"]=h,h.Pathomorph=h,module.exports=h):t.Pathomorph=h})(this);
